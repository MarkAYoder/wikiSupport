head	1.6;
access;
symbols;
locks; strict;
comment	@#@;


1.6
date	95.06.19.18.21.46;	author myoder;	state Exp;
branches;
next	1.5;

1.5
date	95.06.19.18.16.53;	author myoder;	state Exp;
branches;
next	1.4;

1.4
date	95.06.19.18.12.56;	author myoder;	state Exp;
branches;
next	1.3;

1.3
date	95.06.19.18.10.59;	author myoder;	state Exp;
branches;
next	1.2;

1.2
date	95.06.01.19.02.40;	author myoder;	state Exp;
branches;
next	1.1;

1.1
date	95.05.22.15.39.41;	author myoder;	state Exp;
branches;
next	;


desc
@Called with MATLAB code and returns html code with anchors to the
Index created by buildIndex.
@


1.6
log
@Added 1; to the end so it will work with 'require'.
@
text
@#!/usr/local/gnu/bin/perl

# This file reads the MatlabDataBase and lookups up matlab
# keywords and replaces them with URLs to the matlab index.

#$Log: mat2cd.pl,v $
#Revision 1.5  1995/06/19  18:16:53  myoder
#*** empty log message ***
#
#Revision 1.4  1995/06/19  18:12:56  myoder
#Fixed it again.
#
#Revision 1.3  1995/06/19  18:10:59  myoder
#Fixed comment bug.
#
# Revision 1.2  1995/06/01  19:02:40  myoder
# Major change from being passed the matlab code to process to
# getting the matlab code from @@allwords.
#
# Revision 1.1  1995/05/22  15:39:41  myoder
# Initial revision
#
$Header = '$Header: /home/kirin/myoder/bookcd/support/lib/RCS/mat2cd.pl,v 1.5 1995/06/19 18:16:53 myoder Exp myoder $';

# Translate special html characters

sub htmlchar {
  s/&/&amp;/g;
  s/\</&lt;/g;
  s/\>/&gt;/g;
  s/\"/&quot;/g;
}

# Write an html anchor, and keep track of how many have been
# written using the global variable $anchor_count

$anchor_count = 0;

sub anchor_url{
  local($url,$name) = @@_;
  $anchor_count++;
#  return("<a href = \"$url\">$name<\/A>");
  $url =~ s?/database/bookcd/CD-ROM?/research/DSP/courses/ee2200/ee2200cd/visible/?;
return("<a href = \"$url\">$name<\/A>");
}

###########################
# main matlab routine
###########################
sub matlab {
local(@@matwords, @@linewords, %htmlmaster);

$db_file = "MatlabDataBase";		# this is where all the subs are

dbmopen(%htmlmaster, $db_file, 0444) ||
	die "Cannot open subsitution database $db_file";

$print_db = 0;
if($print_db) {
	print "----------------\n";
	while (($key,$val) = each %htmlmaster) {
 	print $key, ' = ', $val, "\n";
	}
print "----------------\n";
}	# if($print_db)

undef(@@outbuff);

#foreach $tmp (@@allwords) {
#	print "allwords = $tmp\n";
#}

while(@@allwords) {
	$_ = shift(@@allwords);
#	print "$_" if $debug;
	last if(/\/cd-matlab/);
	@@linewords = split(/(\W)/);	# split on non-words.

#	foreach $line (@@linewords) {
#		print "linewords[0] = $line\n";
#		}
#	print "@@linewords\n";

	push(@@matwords, @@linewords);
}
pop(@@matwords);		# get rid of <
shift(@@allwords); 	# get rid of >

push(@@outbuff, "<pre>\n");

foreach $word (@@matwords) {
#		print "Checking $word\n";
					if($htmlmaster{$word}) {
#							print "Found $word maps to $htmlmaster{$word}\n";
							push(@@outbuff,&anchor_url($htmlmaster{$word}, $word));
							} 
						else {
								push(@@outbuff, $word);
					}

}	# foreach $word

push(@@outbuff, "</pre>");

dbmclose(%data);

join("",@@outbuff)
}

1;
@


1.5
log
@*** empty log message ***
@
text
@d7 3
d23 1
a23 1
$Header = '$Header: /home/kirin/myoder/bookcd/support/lib/RCS/mat2cd.pl,v 1.4 1995/06/19 18:12:56 myoder Exp myoder $';
d110 1
@


1.4
log
@Fixed it again.
@
text
@d7 3
d20 1
a20 1
$Header = '$Header: /home/kirin/myoder/bookcd/support/lib/RCS/mat2cd.pl,v 1.3 1995/06/19 18:10:59 myoder Exp myoder $';
@


1.3
log
@Fixed comment bug.
@
text
@d7 3
d17 1
a17 1
$Header = '$Header: /home/kirin/myoder/bookcd/support/lib/RCS/mat2cd.pl,v 1.2 1995/06/01 19:02:40 myoder Exp myoder $';
@


1.2
log
@Major change from being passed the matlab code to process to
getting the matlab code from @@allwords.
@
text
@d7 8
a14 4
% Revision 1.1  1995/05/22  15:39:41  myoder
% Initial revision
%
$Header = '$Header: /database/bookcd/CD-ROM/support/scripts/RCS/mat2cd.pl,v 1.1 1995/05/22 15:39:41 myoder Exp $';
@


1.1
log
@Initial revision
@
text
@d6 5
a10 2
#$Log$
$Header = '$Header$';
d38 1
a38 2
local(@@inbuff) = @@_;
local(@@allwords, @@linewords, %htmlmaster);
d40 1
a40 1
print "matlab got <mat-start>\n@@inbuff\n<mat-stop>\n";
d42 2
a43 8
$db_file = "/database/bookcd/CD-ROM/Matlab/Index/MatlabDataBase";		# this is where all the subs are

#if ( ! -e $db_file) {
#	die "$0: Cannot open subsitution database $db_file\n";
#}

dbmopen(%htmlmaster, $db_file, 0666) ||
	die "$0: Cannot open subsitution database $db_file\n";
d56 3
a58 2
($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime(time);
$mon = (Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec)[$mon];
d60 4
a63 2
foreach(@@inbuff) {
#	print "$_";
d65 4
a69 2
# print "$#linewords word found\n";
	push(@@allwords, @@linewords);
d71 1
d73 2
d76 1
a76 1
push(@@outbuff, "pre>\n");
d78 1
a78 1
foreach $word (@@allwords) {
d80 8
a87 7
	if($htmlmaster{$word}) {
    #	print "Found $word maps to $htmlmaster{$word}\n";
	push(@@outbuff,&anchor_url($htmlmaster{$word}, $word));
	} 
	else {
		push(@@outbuff, $word);
	}
d90 1
a90 1
push(@@outbuff, "</pre");
a93 1
# print "From matlab: @@outbuff\n";
@
