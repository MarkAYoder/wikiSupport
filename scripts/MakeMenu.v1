#!/usr/bin/perl

#
# This script creates the javascript file used by Joust to build it's menus.
#
# Usage:  MakeMenu [-faculty]
# Use the option 'sutdent' to leave off things that aren't on the student CD.
use strict;
require 'constants.pl';
my $title    = 'DSP First';
my $visible  = $ENV{'CDROOT'} . '/visible3';
my $menupath = "$visible/contents/scripts";
my $statesol  = 'stusol';
my $menufile = "spfirst_menus.js";
my $chapters = "$visible/chapters";
my $hwList   = "$visible/archives/DB_withKeywords.txt";
my $exampleList   = "$visible/archives/DBforExercises.txt";
# my $exerciseList   = "$visible/archives/ALL_EXER.xlt";

my $faculty = 0;
my $LV = 0;
if($ARGV[0] eq '-faculty') {
  $faculty = 1;
  $menufile = "faculty_menus.js";
  $statesol  = 'facsol';
} elsif($ARGV[0] eq '-LV') {
  $LV = 1;
  $menufile = "LV_menus.js";
}

print "LV = $LV\n";

#######################################################
# Read the databases
#######################################################
if(!$LV) {
 #
 # Read in the HW database.
 #
 my %hw;

 open HW, "<$hwList" or die "Can't open $hwList";

 while(<HW>) {
   /(.*)\t(.*)\t(.*)\t(.*)\t(.*)\t(.*)/;
   my $Quarter = $1;
   my $Statement = $2;
   my $Desc = $3;
   my $Chap = $4;
   my $Sol  = $5;
 #  my $Keywords = $6;
 #  $Keywords =~ s/[\r\n]*$//;  # Removing trailing return or linefeed/

   $Desc =~ s/\"//g;
   $Desc =~ s/<-->/&harr;/;
   $Desc =~ s/-->/&rarr;/;
   $Desc =~ s/<--/&larr;/;

 # Some descriptions are close.  If they differ by only small words, group them together.
 #  print "\n$Desc\n";
   my $desc = ' ' . lc($Desc) . ' ';
   $desc =~ s/,/ , /g;
   $desc =~ s/;/ ; /g;
 #  print "$desc\n";
   $desc =~ s/ (a|and|by|few|for|has|in|is|given|not|of|or|the|to|used|via|when|whose|with|\&|=|,) / /g;
   $desc =~ s/ (a|and|by|few|for|has|in|is|given|not|of|or|the|to|used|via|when|whose|with|\&|=|,|;) / /g;
 #  print "$desc\n";
   $desc =~ s/ +/ /g;
 #  print "$desc\n";

 # Handle problems that are in book.  $chap == x.y if in book.
   if($Chap =~ /\./) {
     if($faculty) {   # Add problem number to description.
       $Desc = "<b>P-$Chap</b> $Desc";
 #      print "$Desc\n";
     } else {  # If it's a student, remove the solution
       $Sol = '';
     }
     $Chap =~ s/\..*//;
   }

   next if $Chap =~ /[\.x]/;	# Skip chaps with . or x in them.
   $hw{$Chap} = {} if(!defined($hw{$Chap}));
   $hw{$Chap}{$desc} = [] if(!defined($hw{$Chap}{$desc}));
   push @{$hw{$Chap}{$desc}}, [$Quarter, $Statement, $Sol, $Desc];
 }
 close HW;

 # Read in the Example and Exercise databases.
 my %example;

 open EXAM, "<$exampleList" or die "Can't open $exampleList";

 while(<EXAM>) {
   /(.*)\t(.*)\t(.*)\t(.*)\t(.*)\t(.*)/;
   my $Quarter = $1;
   my $Statement = $2;
   my $Desc = $3;
   my $Chap = $4;
   my $Sol  = $5;

   $Desc =~ s/\"//g;
   $Desc =~ s/<-->/&harr;/;
   $Desc =~ s/-->/&rarr;/;
   $Desc =~ s/<--/&larr;/;

   next if $Chap =~ /[\.x]/;	# Skip chaps with . or x in them.
   $example{$Chap} = {} if(!defined($example{$Chap}));
   $example{$Chap}{$Statement} = [] if(!defined($example{$Chap}{$Statement}));
   push @{$example{$Chap}{$Statement}}, [$Quarter, $Desc];
 }
 close EXAM;

 # Read in the Exercise database.  *** No need to do, it's with the example database.
 if(0) {
 my %exercise;

 #open EXER, "<$exerciseList" or die "Can't open $exerciseList";

 while(<EXER>) {
   /(.*)\t(.*)\t(.*)\t(.*)\t(.*)\t(.*)\t(.*)\t(.*)/;
   my $Quarter="$1";
   my $Statement=$2;
   my $Sol1=$3;
   my $Sol2=$4;
   my $Sol3=$5;
   my $Sol4=$6;
   my $Chap=$7;
   my $Desc=$8;
   $Quarter =~ s/-//;
   $Desc =~ s/\"//g;
   $Statement =~ s/$\.gif/.pdf/;	# Look for pdf files now.

   next if $Chap =~ /[\.x]/;	# Skip chaps with . or x in them.
   $exercise{$Chap} = {} if(!defined($exercise{$Chap}));
   $exercise{$Chap}{$Statement} = [] if(!defined($exercise{$Chap}{$Statement}));
   push @{$exercise{$Chap}{$Statement}}, [$Quarter, $Desc];
 }
 close EXER;
 }
} else {
  my %hw;
  my %example;
}# if (!$LV)

my $num = 100;
my $name = 'tmp';
my $path = 'this/that.html';
my $dumpmenu = 0;	# Set to 1 to have a separate browswer window opened and debug info printed in it.

if(-e "$menupath/$menufile") {
  rename "$menupath/$menufile", "$menupath/$menufile.old" 
    or die "Can't rename $menupath/$menufile";
}
open(FD, ">$menupath/$menufile") 
  or die "Can't open $menupath/$menufile";

print FD "// Do not edit.  This file is created with $0
function makemenu_chapter(theMenu) {
  // This function creates the chapter menu items

  var startTime=new Date()
  var level1ID = -1
  var level2ID = -2
  var chap = 0
  level1ID = theMenu.addEntry(-1,'Root','$title Chapters','chapters.htm','Contents');
  theMenu.entry[level1ID].noOutlineImg = true;
";

if($dumpmenu) {
print FD "
var dumpMenu = window.open(\"\", \"dumpMenu\");
dumpMenu.document.write(\"count = \" + theMenu.count + \"<br>\")

for(prop in theBrowser) {
	dumpMenu.document.write(\"theBrowser.\" + prop + \"=\" + theBrowser[prop] + \"<br>\")
}
dumpMenu.document.write(\"<br>\")

for(var i=0; i<theMenu.count; i++) {
	dumpMenu.document.write(\"entry[\" + i + \"] = \" + theMenu.entry[i] + \"<br>\")
	for(prop in theMenu.entry[i]) {
		dumpMenu.document.write(\"entry[\" + i + \"].\" + prop + \"=\" + 
			theMenu.entry[i][prop] + \"<br>\")
	}	
	dumpMenu.document.write(\"<br>\")
}
";
}

chdir $chapters or die "Can't chdir to $chapters";

opendir(DIR, '.') or die "Can't open $chapters";

my @chapters = sort readdir(DIR);
my $chapter;
foreach $chapter (@chapters) {
  next if $chapter =~ m/^(\.|\.\.)$/;	# Don't do . and ..
  next unless $chapter =~ m/^\d\d/;	# Don't process a directory unless it begins with two digits.

  # Get the chapter number
  open(NUM, "<$chapter/number.txt") or die "Can't open $chapter/number.txt";
  $num = <NUM>; chop $num; chop $num;
  close(NUM);
  # Get the chater title
  open(NAME, "<$chapter/name.txt") or die "Can't open $chapter/name.txt";
  $name = <NAME>; chop $name; chop $name;
  close(NAME);

  next if($num eq 'B' and !$faculty);

  print "$chapter\n";
  $path = "../chapters/$chapter";
  print FD "\n//#################### Chap $num #################\n";

  if($num == 1) {	# Chap 01 doesn't have labs, etc., so treat it differently
    print FD "  chap$num = theMenu.addEntry(-1, 'Folder' ,'$num: $name', 'welcome.htm');\n";
    print FD "  level2ID = theMenu.addChild(chap$num, 'Document', 'Welcome', 'welcome.htm');\n";
    print FD "  level2ID = theMenu.addChild(chap$num, 'Document', '<b>Getting Started</b>', 'starhelp.htm');\n";
    print FD "  level2ID = theMenu.addChild(chap$num, 'Document', 'DSP First Resources', 'http://users.ece.gatech.edu/mcclella/SPFirst');\n";
    print FD "  level2ID = theMenu.addChild(chap$num, 'Document', 'Help', 'help.htm');\n";
    print FD "  level2ID = theMenu.addChild(chap$num, 'Document', 'Authors', 'authors.htm');\n";
    print FD "  level2ID = theMenu.addChild(chap$num, 'Document', 'Prentice Hall', 'prenhall.htm');\n";
    print FD "  level2ID = theMenu.addChild(chap$num, 'Document', 'License', 'license.htm');\n";
    print FD "  level2ID = theMenu.addChild(chap$num, 'Document', 'Feedback', 'feedback.htm');\n";
#    print FD "  level2ID = theMenu.addChild(chap$num, 'Document', 'Book to CD Links', 'links.htm');\n";
#    print FD "  level2ID = theMenu.addChild(chap$num, 'Document', 'MATLAB Index', '../matlab/spfirst/index.htm');\n";
#    print FD "  level2ID = theMenu.addChild(chap$num, 'Document', 'MATLAB Index <i>(old)</i>', 'matlab.htm');\n";
    print FD "  level2ID = theMenu.addChild(chap$num, 'pdf',      'Text', '../FromJim/Text/chap01.pdf');\n" if $faculty;
    print FD "  level2ID = theMenu.addChild(chap$num, 'pdf',      'Table of Contents', 'FRONT.pdf');\n";
    print FD "  level2ID = theMenu.addChild(chap$num, 'pdf',      'Index', 'INDEX.pdf');\n";
    print FD "  theMenu.setEntry(chap1, true);\n";
    print FD "\n";

#  } elsif($num == 9) {
#       print "Skipping Chapter 9\n";
#  } elsif($num == 10) {
#       print "Skipping Chapter 10\n";
#  } elsif($num == 11) {
#       print "Skipping Chapter 11\n";
#  } elsif($num == 12) {
#       print "Skipping Chapter 12\n";
  } else {

    print FD "  chap$num = theMenu.addEntry(-1, 'Folder' ,'$num: $name', '$path/overview.htm');\n";

  #
  # Link in the Labs
  #
  opendir(LABDIR, "$chapter/labs") or die "Can't open $chapter/labs";
  my @labs = sort readdir(LABDIR);
  my $lab;
  my $first = 1;
  foreach $lab (@labs) {
    next if $lab =~ m/^(\.|\.\.)$/;
    next if !-d "$chapter/labs/$lab";
    next if $lab eq 'RCS';
    print "  $lab\n";
    if($first) {  # Include the Labs entry if there are labs.
      print FD "\n//###### Chap $num: Labs ####\n";
      print FD "  level2ID = theMenu.addChild(chap$num, 'Folder', 'Labs - MATLAB', '$path/labs/overview.htm');\n";
      $first = 0;
    }
    open(LABOVER, "<$chapter/labs/$lab/overview.txt") or die "Can't open $chapter/labs/$lab/overview.txt";
    my $overview = <LABOVER>; $overview =~ s/[\r\n]//g;
    close LABOVER;
    # $overview =~ s/(.*?)(.*)/\1/;
    $overview =~ s/Lab //;
    my $lab2 = $lab;	# Change the . to _ so the JavaScript is correct.
    $lab2 =~ s/[\.\-]/_/g;

# The old labs have an index.htm file.  The new ones don't.
    if(-e "$path/labs/$lab/index.htm") {
#      print FD "    $lab2 = theMenu.addChild(level2ID,'Document','$overview',\n\t\t'$path/labs/$lab/index.htm');\n";
    } else {
      print FD "    $lab2 = theMenu.addChild(level2ID,'Folder','$overview',\n\t\t'$path/labs/$lab/$lab.pdf');\n";
      print FD "    tmp = theMenu.addChild($lab2,'pdf','Handout',\n\t\t'$path/labs/$lab/$lab.pdf');\n";
      print FD "    tmp = theMenu.addChild($lab2,'matlab','MATLAB Files',\n\t\t'$path/labs/$lab/$lab.zip');\n"
	if(-e "$path/labs/$lab/$lab.zip");
      print FD "    tmp = theMenu.addChild($lab2,'Document','FAQ',\n\t\t'$path/labs/$lab/$lab", "faq.htm');\n"
	if(-e "$path/labs/$lab/$lab" . "faq.htm" and $faculty);
      print FD "    tmp = theMenu.addChild($lab2,'tex','Handout Source',\n\t\t'$path/labs/$lab/$lab.tex');\n"
	if($faculty);

}

  }
  close LABDIR;

  #
  # Link in the LabVIEW Labs
  #
#  opendir(LABDIR, "$chapter/labsLV") or die "Can't open $chapter/labsLV";
  if(opendir(LABDIR, "$chapter/labsLV")) {
  my @labs = sort readdir(LABDIR);
  my $lab;
  my $first = 1;
  foreach $lab (@labs) {
    next if $lab =~ m/^(\.|\.\.)$/;
    next if !-d "$chapter/labsLV/$lab";
    next if $lab eq 'RCS';
    print "  $lab\n";
    if($first) {  # Include the Labs entry if there are labs.
      print FD "\n//###### Chap $num: LabsLV ####\n";
      print FD "  level2ID = theMenu.addChild(chap$num, 'Folder', 'Labs - LabVIEW', '$path/labsLV/overview.htm');\n";
      $first = 0;
    }
    open(LABOVER, "<$chapter/labsLV/$lab/overview.txt") or die "Can't open $chapter/labsLV/$lab/overview.txt";
    my $overview = <LABOVER>; $overview =~ s/[\r\n]//g;
    close LABOVER;
    # $overview =~ s/(.*?)(.*)/\1/;
    $overview =~ s/Lab //;
    my $lab2 = $lab;	# Change the . to _ so the JavaScript is correct.
    $lab2 =~ s/[\.\-]/_/g;

      print FD "    $lab2 = theMenu.addChild(level2ID,'Folder','$overview',\n\t\t'$path/labsLV/$lab/$lab.pdf');\n";
      print FD "    tmp = theMenu.addChild($lab2,'pdf','Handout',\n\t\t'$path/labsLV/$lab/$lab.pdf');\n";
      print FD "    tmp = theMenu.addChild($lab2,'matlab','LabVIEW Files',\n\t\t'$path/labsLV/$lab/$lab.zip');\n"
	if(-e "$path/labsLV/$lab/$lab.zip");
      print FD "    tmp = theMenu.addChild($lab2,'Document','FAQ',\n\t\t'$path/labsLV/$lab/$lab", "faq.htm');\n"
	if(-e "$path/labsLV/$lab/$lab" . "faq.htm" and $faculty);
      print FD "    tmp = theMenu.addChild($lab2,'tex','Handout Source',\n\t\t'$path/labsLV/$lab/$lab.tex');\n"
	if($faculty);
  }
  close LABDIR;
}

  #
  # Link in the Demos
  #
  opendir(LABDIR, "$chapter/demos") or die "Can't open $chapter/demos";
  my @labs = sort readdir(LABDIR);
  my $lab;
  my $first = 1;
  foreach $lab (@labs) {
    next if $lab =~ m/^(\.|\.\.)$/;
    next if !-d "$chapter/demos/$lab";
    print "  $lab\n";
    if(!open(LABOVER, "<$chapter/demos/$lab/overview.txt")) {
      print "Can't open $chapter/demos/$lab/overview.txt\n";
      next;
    }
    if($first) {
      print FD "\n//###### Chap $num: Demos ####\n";
      print FD "  level2ID = theMenu.addChild(chap$num, 'Folder', 'Demos', \n\t\t'$path/demos/overview.htm');\n";
      $first = 0;
    }
    my $overview = <LABOVER>;
    close LABOVER; chop $overview; chop $overview;
    # $overview =~ s/(.*?)(.*)/\1/;
    print FD "    x$lab = theMenu.addChild(level2ID,'Document','$overview',\n\t\t'$path/demos/$lab/index.htm');\n";

  }
  close LABDIR;

  #
  # Link in the LabVIEW  Demos
  #
#  opendir(LABDIR, "$chapter/demosLV") or die "Can't open $chapter/demosLV";
    if(opendir(LABDIR, "$chapter/demosLV")) {
  my @labs = sort readdir(LABDIR);
  my $lab;
  my $first = 1;
  foreach $lab (@labs) {
    next if $lab =~ m/^(\.|\.\.)$/;
    next if !-d "$chapter/demosLV/$lab";
    print "  $lab\n";
    if(!open(LABOVER, "<$chapter/demosLV/$lab/overview.txt")) {
      print "Can't open $chapter/demosLV/$lab/overview.txt\n";
      next;
    }
    if($first) {
      print FD "\n//###### Chap $num: Demos ####\n";
      print FD "  level2ID = theMenu.addChild(chap$num, 'Folder', 'Demos - LabVIEW', \n\t\t'$path/demosLV/overview.htm');\n";
      $first = 0;
    }
    my $overview = <LABOVER>;
    close LABOVER; chop $overview; chop $overview;
    # $overview =~ s/(.*?)(.*)/\1/;
    print FD "    x$lab = theMenu.addChild(level2ID,'Document','$overview',\n\t\t'$path/demosLV/$lab/index.htm');\n";

  }
  close LABDIR;
}

  if($faculty) {
  # Link in the Notes PDF

  opendir(LABDIR, "$chapter/notes") or die "Can't open $chapter/notes";
  my @labs = sort readdir(LABDIR);
  my $lab;
  my $first = 1;
  foreach $lab (@labs) {
    next if $lab =~ m/^(\.|\.\.)$/;
    next if $lab !~ m/\.pdf$/;

    if($first) {
      print FD "\n//###### Chap $num: Notes (pdf) ####\n";
      print FD "  level2ID = theMenu.addChild(chap$num, 'Folder', 'Notes (pdf)', \n\t\t'$path/notes/$lab');\n";
      $first = 0;
    }

    my $txt = $lab;
    $txt =~ s/\.pdf$/.txt/;
    open TXTFD, "<$chapter/notes/$txt" or die "Can't open $txt";
    my $title = <TXTFD>;  $title =~ s/[\r\n]*//g;
    close TXTFD;

    print FD "    x = theMenu.addChild(level2ID,'pdf','$title',\n\t\t'$path/notes/$lab');\n";
  }
  close LABDIR;


  # Link in the Notes PPT

  if($faculty) {
    opendir(LABDIR, "$chapter/notes") or die "Can't open $chapter/notes";
    my @labs = sort readdir(LABDIR);
    my $lab;
    my $first = 1;
    foreach $lab (@labs) {
      next if $lab =~ m/^(\.|\.\.)$/;
      next if $lab !~ m/\.ppt$/;
      
      if($first) {
	print FD "\n//###### Chap $num: Notes (ppt) ####\n";
	print FD "  level2ID = theMenu.addChild(chap$num, 'Folder', 'Notes (ppt)', \n\t\t'$path/notes/$lab');\n";
	$first = 0;
      }
      
      my $txt = $lab;
      $txt =~ s/\.ppt$/.txt/;
      open TXTFD, "<$chapter/notes/$txt" or die "Can't open $txt";
      my $title = <TXTFD>;  $title =~ s/[\r\n]*//g;
      close TXTFD;

      print FD "    x = theMenu.addChild(level2ID,'ppt','$title',\n\t\t'$path/notes/$lab');\n";
    }
    close LABDIR;
  }
}    # if($faculty)
  #
  # Link in the Examples
  #

  if($example{$num}) {
    my $first=1;
    print FD "\n//###### Chap $num: Examples ####\n";
    my $Statement;
    foreach $Statement (sort sortOrder keys %{$example{$num}}) {
      next if $Statement !~ /exam/i;
      	my $Quarter   = $example{$num}{$Statement}[0][0];
	my $desc      = $example{$num}{$Statement}[0][1];
	$Statement =~ /exam(.*)_0*(\d*)\./;

      if(-e "../archives/exersol/$Statement") {
	if($first) {
	  print FD "  level2ID = theMenu.addChild(chap$num, 'Folder', 'Examples', \n\t\t'$path/example/overview.htm');\n";
	  $first=0;
	}
	print FD "    tmp = theMenu.addChild(level2ID,'pdf',\"$1-$2: $desc\",\n\t\t'../archives/exersol/$Statement');\n";
      } else {
	print "Can't find exersol/$Statement\n";
      }
    }
  }

  #
  # Link in the Exercises
  #
  if($example{$num}) {
    print FD "\n//###### Chap $num: Exercises ####\n";
    print FD "  level2ID = theMenu.addChild(chap$num, 'Folder', 'Exercises', \n\t\t'$path/exercise/overview.htm');\n";
    my $Statement;
    foreach $Statement (sort sortOrder keys %{$example{$num}}) {
      next if $Statement !~ /exer/i;
      my $Quarter   = $example{$num}{$Statement}[0][0];
      my $desc      = $example{$num}{$Statement}[0][1];
      $Statement =~ /exer(.*)_(\d*)\./;
      
      #	print FD "    tmp = theMenu.addChild(level2ID,'pdf',\"$1.$2: $desc\",\n\t\t'../archives/exersol/$Statement');\n";
      if(-e "../archives/exersol/$Statement") {
	print FD "    tmp = theMenu.addChild(level2ID,'pdf',\"$1.$2\",\n\t\t'../archives/exersol/$Statement');\n";
      } else {
	print "Can't find exersol/$Statement\n";
      }
    }
  }

  #
  # Link in the Homework
  #

  if($hw{$num}) {
    print FD "\n//###### Chap $num: Homework ####\n";
    print FD "  level2ID = theMenu.addChild(chap$num, 'Folder', 'Homework (with solutions)', \n\t\t'$path/homework/overview.htm');\n";
#    print FD "if(chap == \'$num\') {\n";
    my $desc;
    foreach $desc (sort keys %{$hw{$num}}) {
      my $count = @{$hw{$num}{$desc}};
      # print "\t$desc: $count\n";
      my $sol = $hw{$num}{$desc}[0][2];
      if($sol) {     # Add only if it has a solution.
	if(!$faculty) {
	  my $Quarter   = $hw{$num}{$desc}[0][0];
	  my $Statement = $hw{$num}{$desc}[0][1];
	  my $Desc      = $hw{$num}{$desc}[0][3];

	  if(-e "../archives/$statesol/$Quarter/$Statement") {
	    print FD "    tmp = theMenu.addChild(level2ID,'pdf',\"$Desc\",\n\t\t'../archives/$statesol/$Quarter/$Statement');\n";
	  } else {
	    print "Can't find $statesol/$Quarter/$Statement\n";
	  }
	} else {
	  my $Quarter   = $hw{$num}{$desc}[0][0];
	  my $Statement = $hw{$num}{$desc}[0][1];
	  my $Desc      = $hw{$num}{$desc}[0][3];

	  print FD "    tmp = theMenu.addChild(level2ID,'Folder',  \"<i>($count)</i> $Desc\",\n\t\t'../archives/$statesol/$Quarter/$Statement');\n";
	  my $hw;
	  my $hwNum = 1;
	  if($faculty) {
	    foreach $hw (@{$hw{$num}{$desc}}) {
	      $Quarter   = $hw->[0];
	      $Statement = $hw->[1];
	      $Desc      = $hw->[3];
	      #	  $Quarter =~ /(.*)_/;
	      #	  my $desc = $1;
	      #	  print FD "      tmp2 = theMenu.addChild(tmp,'pdf',\"$desc\",\n\t\t'../archives/$statesol/$Quarter/$Statement');\n";
	      if(-e "../archives/$statesol/$Quarter/$Statement") {
		if($hwNum==1) {
		  print FD "      tmp2 = theMenu.addChild(tmp,'pdf',\"$Desc (<font color=red>Students have this</font>)\",\n\t\t'../archives/$statesol/$Quarter/$Statement');\n";
		} else {
		  print FD "      tmp2 = theMenu.addChild(tmp,'pdf',\"$Desc\",\n\t\t'../archives/$statesol/$Quarter/$Statement');\n";
	      }
	      } else {
		print "Can't find $statesol/$Quarter/$Statement\n";
	      }
	      $hwNum++;
	    }
	  } # if($faculty)
	}
      } # if ($sol)
    }
    #    print FD "} // end if\n";
  }

if(1) {
  #
  # Link in the Homework without solutions
  #
  if($hw{$num}) {
    print FD "\n//###### Chap $num: Homework ####\n";
    print FD "  level2ID = theMenu.addChild(chap$num, 'Folder', 'Homework (w/o solutions)', \n\t\t'$path/homework/overview.htm');\n";
#    print FD "if(chap == \'$num\') {\n";
    my $desc;
    foreach $desc (sort keys %{$hw{$num}}) {
      my $count = @{$hw{$num}{$desc}};
      # print "\t$desc: $count\n";
      my $sol = $hw{$num}{$desc}[0][2];
      if(!$sol) {     # Add only if it has no solution.
      if(!$faculty) {
	my $Quarter   = $hw{$num}{$desc}[0][0];
	my $Statement = $hw{$num}{$desc}[0][1];
	my $Desc      = $hw{$num}{$desc}[0][3];
	if(-e "../archives/$statesol/$Quarter/$Statement") {
	print FD "    tmp = theMenu.addChild(level2ID,'pdf',\"$Desc\",\n\t\t'../archives/$statesol/$Quarter/$Statement');\n";
      } else {
	print "Can't find $statesol/$Quarter/$Statement\n";
      }
      } else {
	my $Quarter   = $hw{$num}{$desc}[0][0];
	my $Statement = $hw{$num}{$desc}[0][1];
	my $Desc      = $hw{$num}{$desc}[0][3];
	print FD "    tmp = theMenu.addChild(level2ID,'Folder',  \"<i>($count)</i> $Desc\",\n\t\t'../archives/$statesol/$Quarter/$Statement');\n";
	my $hw;
	my $hwNum = 1;
	if($faculty) {
	foreach $hw (@{$hw{$num}{$desc}}) {
	  $Quarter   = $hw->[0];
	  $Statement = $hw->[1];
	  $Desc      = $hw->[3];
#	  $Quarter =~ /(.*)_/;
#	  my $desc = $1;
#	  print FD "      tmp2 = theMenu.addChild(tmp,'pdf',\"$desc\",\n\t\t'../archives/$statesol/$Quarter/$Statement');\n";
	  if($hwNum==1) {
	  print FD "      tmp2 = theMenu.addChild(tmp,'pdf',\"$Desc (<font color=red>Students have this</font>)\",\n\t\t'../archives/$statesol/$Quarter/$Statement');\n";
	} else {
	  print FD "      tmp2 = theMenu.addChild(tmp,'pdf',\"$Desc\",\n\t\t'../archives/$statesol/$Quarter/$Statement');\n";
	}
	  $hwNum++;
	}
      } # if($faculty)
      }
    } # if ($sol)
    }
#    print FD "} // end if\n";
  }

}

if($faculty) {
  #
  # Link in the Figures
  #

    print FD "\n//###### Chap $num: Figures ####\n";
    print FD "  level2ID = theMenu.addChild(chap$num, 'Folder', 'Figures','');\n";
    print FD "    tmp = theMenu.addChild(level2ID,'pdf',\"pdf\",\n\t\t'');\n";
    print FD "    tmp = theMenu.addChild(level2ID,'Document',\"html\",\n\t\t'');\n";

#    print FD "} // end if\n";
}

  #
  # Link in the Text
  #
  if($faculty) {
    if($num ne 'A' and $num ne 'B') {
      my $leadnum = sprintf("%02d", $num);
      print FD "   level2ID  = theMenu.addChild(chap$num, 'pdf', 'Text', '../FromJim/Text/chap$leadnum.pdf');\n";
    } elsif($num eq 'A') {  # Do the appendices
      print FD "   level2ID  = theMenu.addChild(chap$num, 'pdf', 'Appendix A', '../FromJim/Text/chap14.pdf');\n";
      print FD "   level2ID  = theMenu.addChild(chap$num, 'pdf', 'Appendix C', '../FromJim/Text/chap16.pdf');\n";
      print FD "   level2ID  = theMenu.addChild(chap$num, 'pdf', 'Appendix D', '../FromJim/Text/chap17.pdf');\n";
    } elsif($num eq 'B') {
      print FD "   level2ID  = theMenu.addChild(chap$num, 'pdf', 'Appendix B', '../FromJim/Text/chap15.pdf');\n";
      print FD "   level2ID  = theMenu.addChild(chapB, 'Document', 'MATLAB Movies', '../FromJim/MATLABMovies/index.html');\n";
    }
  }
}

} # foreach chapter


if ($dumpmenu) {
print FD "

var stopTime=new Date();

dumpMenu.document.write(\"Start time = \" + startTime.getTime() + \"<br>\")
dumpMenu.document.write(\"Stop  time = \" +  stopTime.getTime() + \"<br>\")
dumpMenu.document.write(\"Total time = \" + stopTime.getTime()-startTime.getTime() + \"<br>\")
";
}

print FD "}

function makemenu_demo(theMenu) {
// This function creates the demo menu items
  var level1ID = -1
  level1ID = theMenu.addEntry(-1,'Root','$title Demos','demos.htm','Contents');
  theMenu.entry[level1ID].noOutlineImg = true;

  matlab = theMenu.addEntry(-1, 'Folder' ,'LabVIEW','demos.htm','Contents');

";

makesum('demosLV', $chapters);

print FD "
  theMenu.setEntry(matlab, true);

  matlab = theMenu.addEntry(-1, 'Folder' ,'Matlab','demos.htm','Contents');

";

makesum('demos', $chapters);

print FD "
}

function makemenu_lab(theMenu) {
// This function creates the lab menu items
  var level1ID = -1
  level1ID = theMenu.addEntry(-1,'Root','$title Labs','labs.htm','Contents');
  theMenu.entry[level1ID].noOutlineImg = true;

  matlab = theMenu.addEntry(-1, 'Folder' ,'LabVIEW','demos.htm','Contents');

";

makesum('labsLV', $chapters);

print FD "
  theMenu.setEntry(matlab, true);

  matlab = theMenu.addEntry(-1, 'Folder' ,'Matlab','demos.htm','Contents');

";

makesum('labs', $chapters);

print FD "
}

function makemenu_note(theMenu) {
// This function creates the lab menu items
  var level1ID = -1
  level1ID = theMenu.addEntry(-1,'Root','$title Notes','welcome.htm','Contents');
  theMenu.entry[level1ID].noOutlineImg = true;

";

makesum('notes', $chapters);

print FD "
}
";

close FD;
closedir DIR;

sub makesum {
my $unit = shift;
my $chapters = shift;

chdir $chapters or die "Can't chdir to $chapters";

opendir(DIR, '.') or die "makesum: Can't open $chapters";

my $num=0;

my @chapters = sort readdir(DIR);
my $chapter;
foreach $chapter (@chapters) {
  next if $chapter =~ m/^(\.|\.\.)$/;	# Don't do . and ..
  next unless $chapter =~ m/^\d\d/;	# Don't process a directory unless it begins with two digits.

#  print "$chapter\n";
  $path = "../chapters/$chapter";

# Check each unit in the chapter
  opendir(DEMOS, "$chapter/$unit") or next;
  my @demos = sort readdir(DEMOS);
  closedir DEMOS;
  my $demo;
  foreach $demo (@demos) {
#    print "$chapter/$unit/$demo\n";
    if($unit ne 'notes') {	# Everything but notes goes a level deeper.
      next if !-d "$chapter/$unit/$demo";
      next if $demo =~ m/^(\.|\.\.)$/;	# Don't do . and ..
      next if $demo =~ m/^RCS$/;		# Don't do RCS
      #    print "$demo\n";
      open OVER, "<$chapter/$unit/$demo/overview.txt" or next;
      my $name = <OVER>; $name =~ s/[\r\n]*$//;
      close OVER;

      if($unit eq 'demos' or $unit eq 'demosLV') {
	print FD "  demo$num = theMenu.addChild(matlab, 'Document' ,'$name',\n\t\t'$path/$unit/$demo/index.htm');\n";
      } elsif($unit ne 'labs' and $unit ne 'labsLV') { 
	print FD "  demo$num = theMenu.addEntry(-1, 'Document' ,'$name',\n\t\t'$path/$unit/$demo/index.htm');\n";
      } elsif(!-e "$path/$unit/$demo/index.htm") {
	#
	# Do multi links for each lab.
	#
	print FD "    $demo = theMenu.addChild(matlab,'Folder','$name',\n\t\t'$path/$unit/$demo/$demo.pdf');\n";
	print FD "    tmp = theMenu.addChild($demo,'pdf','Handout',\n\t\t'$path/$unit/$demo/$demo.pdf');\n";
	if($unit eq 'labs') {
	  print FD "    tmp = theMenu.addChild($demo,'matlab','MATLAB Files',\n\t\t'$path/$unit/$demo/$demo.zip');\n"
	    if(-e "$path/$unit/$demo/$demo.zip");
	} else {
	  print FD "    tmp = theMenu.addChild($demo,'matlab','LabVIEW Files',\n\t\t'$path/$unit/$demo/$demo.zip');\n"
	    if(-e "$path/$unit/$demo/$demo.zip");
	}
	print FD "    tmp = theMenu.addChild($demo,'Document','FAQ',\n\t\t'$path/$unit/$demo/$demo", "faq.htm');\n"
	  if(-e "$path/labs/$demo/$demo" . "faq.htm" and $faculty);
	print FD "    tmp = theMenu.addChild($demo,'tex','Handout Source',\n\t\t'$path/labs/$demo/$demo.tex');\n"
	  if($faculty);
	
      } 
    }else {	# We are doing notes.
      next if -d "$chapter/$unit/$demo";
      next if $demo =~ /\.txt$/;	# Don't link the overview.txt files
      my $overname = $demo;
      $overname =~ s/\.(.*)$//;
      my $ext = $1;
      next if !$faculty and $ext eq 'ppt';
#      print "$demo -> $overname\n";
      open OVER, "<$chapter/$unit/$overname.txt" or die "Can't open $chapter/$unit/$overname.txt";
      my $name = <OVER>; $name =~ s/[\r\n]*$//;
      close OVER;
      
      print FD "   notes$num=theMenu.addEntry(-1, '$ext', '$name', \n\t\t'$path/$unit/$demo');\n";
    }
    $num++;
  } # foreach $demo (@demos)
}

}

sub sortOrder {

#  print "a = $a, b = $b\n";

  $a =~ /_(\d*)\./;
  my $a2 = $1;
  $b =~ /_(\d*)\./;
  my $b2 = $1;

#  print "a2 = $a2, b2 = $b2, a2 <=> b2 = ", $a2 <=> $b2, "\n";

  return $a2 <=> $b2;
}
